package com.desafios.admision_mtn.service;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Service;

@Service
@RequiredArgsConstructor
@Slf4j
public class EmailService {
    
    @Value("${spring.profiles.active:dev}")
    private String activeProfile;
    
    @Value("${app.email.mock-mode:true}")
    private boolean mockMode;
    
    private final JavaMailSender mailSender;
    
    @Value("${spring.mail.username:admisiones@mtn.cl}")
    private String fromEmail;
    
    public void sendVerificationCode(String to, String code) {
        if (mockMode || "dev".equals(activeProfile)) {
            log.info("üìß [MODO DESARROLLO] Email de verificaci√≥n para {}", to);
            log.info("üîê [C√ìDIGO DE VERIFICACI√ìN]: {}", code);
            log.info("üìÑ [CONTENIDO]: {}", buildVerificationEmailBody(code));
            return;
        }
        
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject("C√≥digo de Verificaci√≥n - Monte Tabor & Nazaret");
            message.setText(buildVerificationEmailBody(code));
            
            mailSender.send(message);
            log.info("‚úÖ Email de verificaci√≥n enviado exitosamente a: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Error enviando email de verificaci√≥n a {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Error al enviar el correo de verificaci√≥n: " + e.getMessage(), e);
        }
    }
    
    public void sendSimpleMessage(String to, String subject, String body) {
        if (mockMode || "dev".equals(activeProfile)) {
            log.info("üìß [MODO DESARROLLO] Email simple para {}", to);
            log.info("üìù [ASUNTO]: {}", subject);
            log.info("üìÑ [CONTENIDO]: {}", body);
            return;
        }
        
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject(subject);
            message.setText(body);
            
            mailSender.send(message);
            log.info("‚úÖ Email simple enviado exitosamente a {} con asunto: {}", to, subject);
            
        } catch (Exception e) {
            log.error("‚ùå Error enviando email simple a {} con asunto '{}': {}", to, subject, e.getMessage(), e);
            throw new RuntimeException("Error al enviar email: " + e.getMessage(), e);
        }
    }
    
    public void sendWelcomeEmailWithCredentials(String to, String firstName, String lastName, 
                                              String email, String temporaryPassword, String role) {
        String emailContent = buildWelcomeEmailBody(firstName, lastName, email, temporaryPassword, role);
        
        if (mockMode || "dev".equals(activeProfile)) {
            log.info("üìß [MODO DESARROLLO] Email de bienvenida para {}", to);
            log.info("üîê [CREDENCIALES] Email: {} | Password: {}", email, temporaryPassword);
            log.info("üë§ [USUARIO] {} {} - Rol: {}", firstName, lastName, role);
            log.info("üìÑ [CONTENIDO]: {}", emailContent);
            return;
        }
        
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject("Bienvenido/a al Sistema de Admisiones - Monte Tabor & Nazaret");
            message.setText(emailContent);
            
            mailSender.send(message);
            log.info("‚úÖ Email de bienvenida enviado exitosamente a: {}", to);
            log.info("üîê [CREDENCIALES ENVIADAS] Email: {} | Usuario: {} {}", email, firstName, lastName);
            
        } catch (Exception e) {
            log.error("‚ùå Error enviando email de bienvenida a {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Error al enviar email de bienvenida: " + e.getMessage(), e);
        }
    }
    
    public void sendPasswordResetEmail(String to, String firstName, String lastName, String newPassword) {
        String emailContent = buildPasswordResetEmailBody(firstName, lastName, newPassword);
        
        if (mockMode || "dev".equals(activeProfile)) {
            log.info("üìß [MODO DESARROLLO] Email de reset de contrase√±a para {}", to);
            log.info("üîê [NUEVA CONTRASE√ëA]: {}", newPassword);
            log.info("üë§ [USUARIO]: {} {}", firstName, lastName);
            log.info("üìÑ [CONTENIDO]: {}", emailContent);
            return;
        }
        
        try {
            SimpleMailMessage message = new SimpleMailMessage();
            message.setFrom(fromEmail);
            message.setTo(to);
            message.setSubject("Contrase√±a Restablecida - Monte Tabor & Nazaret");
            message.setText(emailContent);
            
            mailSender.send(message);
            log.info("‚úÖ Email de reset de contrase√±a enviado exitosamente a: {}", to);
            
        } catch (Exception e) {
            log.error("‚ùå Error enviando email de reset de contrase√±a a {}: {}", to, e.getMessage(), e);
            throw new RuntimeException("Error al enviar email de reset de contrase√±a: " + e.getMessage(), e);
        }
    }
    
    private String buildVerificationEmailBody(String code) {
        return """
            Estimado/a apoderado/a,
            
            Su c√≥digo de verificaci√≥n para el sistema de admisiones de Monte Tabor & Nazaret es:
            
            %s
            
            Este c√≥digo expirar√° en 10 minutos.
            
            Si no solicit√≥ este c√≥digo, puede ignorar este mensaje.
            
            Atentamente,
            Equipo de Admisiones
            Monte Tabor & Nazaret
            """.formatted(code);
    }
    
    private String buildWelcomeEmailBody(String firstName, String lastName, String email, 
                                       String temporaryPassword, String role) {
        return """
            Estimado/a %s %s,
            
            ¬°Bienvenido/a al Sistema de Admisiones del Colegio Monte Tabor & Nazaret!
            
            Se ha creado su cuenta en el sistema con el rol de: %s
            
            Sus credenciales de acceso son:
            ‚Ä¢ Email: %s
            ‚Ä¢ Contrase√±a temporal: %s
            
            INSTRUCCIONES IMPORTANTES:
            1. Acceda al sistema en: http://localhost:5176/profesor/login
            2. Use las credenciales proporcionadas arriba
            3. Se le solicitar√° cambiar su contrase√±a en el primer inicio de sesi√≥n
            4. Guarde este email de forma segura para referencia futura
            
            SEGURIDAD:
            ‚Ä¢ No comparta sus credenciales con nadie
            ‚Ä¢ Cambie su contrase√±a por una segura al primer acceso
            ‚Ä¢ Si tiene problemas, contacte al administrador del sistema
            
            Si no esperaba recibir este email o tiene alguna pregunta, 
            por favor contacte inmediatamente al equipo de administraci√≥n.
            
            Atentamente,
            Equipo de Tecnolog√≠a
            Colegio Monte Tabor & Nazaret
            Email: admisiones@mtn.cl
            """.formatted(firstName, lastName, role, email, temporaryPassword);
    }
    
    private String buildPasswordResetEmailBody(String firstName, String lastName, String newPassword) {
        return """
            Estimado/a %s %s,
            
            Su contrase√±a ha sido restablecida en el Sistema de Admisiones del Colegio Monte Tabor & Nazaret.
            
            Su nueva contrase√±a temporal es: %s
            
            INSTRUCCIONES:
            1. Acceda al sistema en: http://localhost:5176/profesor/login
            2. Use su email habitual y la nueva contrase√±a proporcionada
            3. Cambie inmediatamente esta contrase√±a por una segura
            
            SEGURIDAD:
            ‚Ä¢ Esta contrase√±a es temporal y debe ser cambiada al primer acceso
            ‚Ä¢ No comparta esta informaci√≥n con nadie
            ‚Ä¢ Si no solicit√≥ este cambio, contacte inmediatamente al administrador
            
            Si tiene problemas para acceder o alguna pregunta, 
            contacte al equipo de administraci√≥n del sistema.
            
            Atentamente,
            Equipo de Tecnolog√≠a
            Colegio Monte Tabor & Nazaret
            Email: admisiones@mtn.cl
            """.formatted(firstName, lastName, newPassword);
    }
}