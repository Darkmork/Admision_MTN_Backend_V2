# Grafana Dashboard for MTN API Gateway and Feature Flag Monitoring
# Provides comprehensive visibility into traffic routing and feature flag performance

apiVersion: v1
kind: ConfigMap
metadata:
  name: mtn-gateway-dashboard
  namespace: monitoring
  labels:
    grafana_dashboard: "1"
    app: mtn-gateway-monitoring
data:
  mtn-gateway-dashboard.json: |
    {
      "dashboard": {
        "id": null,
        "title": "MTN API Gateway & Feature Flags",
        "tags": ["mtn", "gateway", "feature-flags", "microservices"],
        "style": "dark",
        "timezone": "America/Santiago",
        "refresh": "30s",
        "time": {
          "from": "now-1h",
          "to": "now"
        },
        "panels": [
          {
            "id": 1,
            "title": "Traffic Overview",
            "type": "stat",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 0
            },
            "targets": [
              {
                "expr": "sum(rate(kong_http_status[1m]))",
                "legendFormat": "Total Requests/sec",
                "refId": "A"
              },
              {
                "expr": "sum(rate(kong_http_status{code=~\"2..\"}[1m])) / sum(rate(kong_http_status[1m]))",
                "legendFormat": "Success Rate",
                "refId": "B"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "short"
              }
            }
          },
          {
            "id": 2,
            "title": "Feature Flag Status",
            "type": "table",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 0
            },
            "targets": [
              {
                "expr": "feature_flag_enabled",
                "legendFormat": "{{flag_name}}",
                "refId": "A"
              }
            ],
            "transformations": [
              {
                "id": "organize",
                "options": {
                  "excludeByName": {},
                  "indexByName": {},
                  "renameByName": {
                    "flag_name": "Feature Flag",
                    "Value": "Enabled"
                  }
                }
              }
            ]
          },
          {
            "id": 3,
            "title": "Service Traffic Distribution",
            "type": "piechart",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 8
            },
            "targets": [
              {
                "expr": "sum(rate(kong_http_status[5m])) by (service)",
                "legendFormat": "{{service}}",
                "refId": "A"
              }
            ],
            "options": {
              "pieType": "pie",
              "reduceOptions": {
                "values": false,
                "calcs": ["lastNotNull"],
                "fields": ""
              }
            }
          },
          {
            "id": 4,
            "title": "Response Times by Service",
            "type": "timeseries",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 8
            },
            "targets": [
              {
                "expr": "histogram_quantile(0.95, sum(rate(kong_latency_bucket[5m])) by (service, le))",
                "legendFormat": "p95 - {{service}}",
                "refId": "A"
              },
              {
                "expr": "histogram_quantile(0.50, sum(rate(kong_latency_bucket[5m])) by (service, le))",
                "legendFormat": "p50 - {{service}}",
                "refId": "B"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "ms"
              }
            }
          },
          {
            "id": 5,
            "title": "Canary Deployment Status",
            "type": "stat",
            "gridPos": {
              "h": 6,
              "w": 24,
              "x": 0,
              "y": 16
            },
            "targets": [
              {
                "expr": "feature_flag_canary_weight",
                "legendFormat": "{{service}} - Canary Weight",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "thresholds"
                },
                "thresholds": {
                  "steps": [
                    {
                      "color": "green",
                      "value": null
                    },
                    {
                      "color": "yellow",
                      "value": 1
                    },
                    {
                      "color": "red",
                      "value": 50
                    }
                  ]
                },
                "unit": "percent"
              }
            }
          },
          {
            "id": 6,
            "title": "Error Rates by Service",
            "type": "timeseries",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 22
            },
            "targets": [
              {
                "expr": "sum(rate(kong_http_status{code=~\"5..\"}[5m])) by (service) / sum(rate(kong_http_status[5m])) by (service)",
                "legendFormat": "{{service}} Error Rate",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "percentunit"
              }
            },
            "alert": {
              "conditions": [
                {
                  "evaluator": {
                    "params": [0.05],
                    "type": "gt"
                  },
                  "operator": {
                    "type": "and"
                  },
                  "query": {
                    "params": ["A", "5m", "now"]
                  },
                  "reducer": {
                    "params": [],
                    "type": "avg"
                  },
                  "type": "query"
                }
              ],
              "executionErrorState": "alerting",
              "for": "2m",
              "frequency": "30s",
              "handler": 1,
              "name": "High Error Rate Alert",
              "noDataState": "no_data",
              "notifications": []
            }
          },
          {
            "id": 7,
            "title": "Kong Gateway Health",
            "type": "timeseries",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 22
            },
            "targets": [
              {
                "expr": "up{job=\"kong\"}",
                "legendFormat": "Kong Instance - {{instance}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "short"
              }
            }
          },
          {
            "id": 8,
            "title": "Feature Flag Evaluations",
            "type": "timeseries",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 0,
              "y": 30
            },
            "targets": [
              {
                "expr": "sum(rate(feature_flag_evaluations_total[5m])) by (flag_name)",
                "legendFormat": "{{flag_name}}",
                "refId": "A"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "reqps"
              }
            }
          },
          {
            "id": 9,
            "title": "Database Connections",
            "type": "timeseries",
            "gridPos": {
              "h": 8,
              "w": 12,
              "x": 12,
              "y": 30
            },
            "targets": [
              {
                "expr": "hikaricp_connections_active{job=\"feature-flag-service\"}",
                "legendFormat": "Active Connections",
                "refId": "A"
              },
              {
                "expr": "hikaricp_connections_max{job=\"feature-flag-service\"}",
                "legendFormat": "Max Connections",
                "refId": "B"
              }
            ],
            "fieldConfig": {
              "defaults": {
                "color": {
                  "mode": "palette-classic"
                },
                "unit": "short"
              }
            }
          }
        ],
        "templating": {
          "list": [
            {
              "current": {
                "selected": false,
                "text": "All",
                "value": "$__all"
              },
              "datasource": "Prometheus",
              "definition": "label_values(kong_http_status, service)",
              "hide": 0,
              "includeAll": true,
              "multi": false,
              "name": "service",
              "options": [],
              "query": {
                "query": "label_values(kong_http_status, service)",
                "refId": "Prometheus-service-Variable-Query"
              },
              "refresh": 1,
              "regex": "",
              "skipUrlSync": false,
              "sort": 0,
              "tagValuesQuery": "",
              "tagsQuery": "",
              "type": "query",
              "useTags": false
            }
          ]
        },
        "annotations": {
          "list": [
            {
              "builtIn": 1,
              "datasource": "-- Grafana --",
              "enable": true,
              "hide": true,
              "iconColor": "rgba(0, 211, 255, 1)",
              "name": "Annotations & Alerts",
              "type": "dashboard"
            },
            {
              "datasource": "Prometheus",
              "enable": true,
              "expr": "changes(feature_flag_enabled[1m]) > 0",
              "iconColor": "yellow",
              "name": "Feature Flag Changes",
              "showIn": 0,
              "titleFormat": "Feature Flag Change: {{flag_name}}"
            }
          ]
        }
      }
    }

---
# Prometheus ServiceMonitor for Kong Gateway
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: kong-gateway
  namespace: monitoring
  labels:
    app: kong-gateway
spec:
  selector:
    matchLabels:
      app: kong
  endpoints:
  - port: metrics
    interval: 30s
    path: /metrics
  namespaceSelector:
    matchNames:
    - kong-system

---
# Prometheus ServiceMonitor for Feature Flag Service
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: feature-flag-service
  namespace: monitoring
  labels:
    app: feature-flag-service
spec:
  selector:
    matchLabels:
      app: feature-flag-service
  endpoints:
  - port: http
    interval: 30s
    path: /actuator/prometheus
  namespaceSelector:
    matchNames:
    - mtn-gateway

---
# Prometheus ServiceMonitor for Traffic Routing Controller
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: traffic-routing-controller
  namespace: monitoring
  labels:
    app: traffic-routing-controller
spec:
  selector:
    matchLabels:
      app: traffic-routing-controller
  endpoints:
  - port: http
    interval: 30s
    path: /metrics
  namespaceSelector:
    matchNames:
    - mtn-gateway

---
# PrometheusRule for API Gateway Alerts
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: mtn-gateway-alerts
  namespace: monitoring
  labels:
    app: mtn-gateway
spec:
  groups:
  - name: mtn-gateway.rules
    interval: 30s
    rules:
    - alert: KongGatewayDown
      expr: up{job="kong"} == 0
      for: 1m
      labels:
        severity: critical
        service: kong-gateway
        environment: production
      annotations:
        summary: "Kong Gateway is down"
        description: "Kong Gateway instance {{ $labels.instance }} has been down for more than 1 minute"
        runbook_url: "https://runbooks.mtn.cl/gateway/kong-down"

    - alert: HighErrorRate
      expr: |
        (
          sum(rate(kong_http_status{code=~"5.."}[5m])) /
          sum(rate(kong_http_status[5m]))
        ) > 0.05
      for: 2m
      labels:
        severity: critical
        service: kong-gateway
        environment: production
      annotations:
        summary: "High error rate detected"
        description: "Error rate is {{ $value | humanizePercentage }}"
        runbook_url: "https://runbooks.mtn.cl/gateway/high-error-rate"

    - alert: HighLatency
      expr: |
        histogram_quantile(0.95,
          sum(rate(kong_latency_bucket[5m])) by (le)
        ) > 2000
      for: 3m
      labels:
        severity: warning
        service: kong-gateway
        environment: production
      annotations:
        summary: "High latency detected"
        description: "95th percentile latency is {{ $value }}ms"
        runbook_url: "https://runbooks.mtn.cl/gateway/high-latency"

    - alert: FeatureFlagServiceDown
      expr: up{job="feature-flag-service"} == 0
      for: 1m
      labels:
        severity: critical
        service: feature-flag-service
        environment: production
      annotations:
        summary: "Feature Flag Service is down"
        description: "Feature Flag Service has been down for more than 1 minute"
        runbook_url: "https://runbooks.mtn.cl/feature-flags/service-down"

    - alert: TrafficRoutingControllerDown
      expr: up{job="traffic-routing-controller"} == 0
      for: 2m
      labels:
        severity: warning
        service: traffic-routing-controller
        environment: production
      annotations:
        summary: "Traffic Routing Controller is down"
        description: "Traffic routing may not be dynamically updated"
        runbook_url: "https://runbooks.mtn.cl/gateway/controller-down"

    - alert: UnbalancedTrafficDistribution
      expr: |
        (
          max(rate(kong_http_status[5m])) by (service) /
          avg(rate(kong_http_status[5m])) by (service)
        ) > 3
      for: 5m
      labels:
        severity: warning
        service: kong-gateway
        environment: production
      annotations:
        summary: "Unbalanced traffic distribution"
        description: "Service {{ $labels.service }} is receiving disproportionate traffic"
        runbook_url: "https://runbooks.mtn.cl/gateway/traffic-imbalance"

    - alert: CanaryDeploymentStuck
      expr: |
        feature_flag_canary_weight > 0 and
        increase(feature_flag_canary_weight[10m]) == 0
      for: 10m
      labels:
        severity: warning
        service: canary-deployment
        environment: production
      annotations:
        summary: "Canary deployment appears stuck"
        description: "Canary weight for {{ $labels.service }} has not changed in 10 minutes"
        runbook_url: "https://runbooks.mtn.cl/canary/stuck-deployment"