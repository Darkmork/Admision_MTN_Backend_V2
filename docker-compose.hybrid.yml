# docker-compose.hybrid.yml
# Configuración híbrida: API Gateway + Monolito + Bases de datos de microservicios
version: '3.8'

services:
  # ==========================================
  # DATABASES (Para futura migración)
  # ==========================================
  
  # User Service Database
  users-db:
    image: postgres:15-alpine
    container_name: mtn-users-db
    environment:
      POSTGRES_DB: users_db
      POSTGRES_USER: users_admin
      POSTGRES_PASSWORD: users123
    ports:
      - "5433:5432"
    volumes:
      - users_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U users_admin -d users_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mtn-network
    restart: unless-stopped

  # Main PostgreSQL Database (Monolito)
  main-db:
    image: postgres:15-alpine
    container_name: mtn-main-db
    environment:
      POSTGRES_DB: Admisión_MTN_DB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - main_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d Admisión_MTN_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - mtn-network
    restart: unless-stopped

  # ==========================================
  # API GATEWAY (NGINX - PUNTO DE ENTRADA)
  # ==========================================
  
  api-gateway:
    image: nginx:alpine
    container_name: mtn-api-gateway
    ports:
      - "8080:80"  # PUERTO PRINCIPAL DEL SISTEMA
    volumes:
      - ./gateway-hybrid.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend-monolith
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - mtn-network
    restart: unless-stopped

  # ==========================================
  # BACKEND MONOLITO (Adaptado para microservicios)
  # ==========================================

  backend-monolith:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: mtn-backend-monolith
    environment:
      SPRING_PROFILES_ACTIVE: microservices
      SERVER_PORT: 8081
      DB_HOST: main-db
      DB_PORT: 5432
      DB_NAME: Admisión_MTN_DB
      DB_USERNAME: admin
      DB_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      main-db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - mtn-network
    restart: unless-stopped

# ==========================================
# NETWORKS
# ==========================================

networks:
  mtn-network:
    driver: bridge
    name: mtn-hybrid-network

# ==========================================
# VOLUMES
# ==========================================

volumes:
  main_db_data:
    name: mtn_main_db_data
  users_db_data:
    name: mtn_users_db_data