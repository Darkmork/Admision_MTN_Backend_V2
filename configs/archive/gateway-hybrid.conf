# gateway-hybrid.conf
# NGINX Configuration for Hybrid Architecture
# Routes all requests to backend monolith through API Gateway pattern

# Upstream servers
upstream backend-monolith {
    server backend-monolith:8081;
}

server {
    listen 80;
    server_name localhost;

    # CORS Headers for all routes
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5174' always;
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5175' always;
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5176' always;
    add_header 'Access-Control-Allow-Origin' 'http://localhost:5177' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
    add_header 'Access-Control-Allow-Credentials' 'true' always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173';
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5174';
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5175';
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5176';
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5177';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control';
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    # Health check endpoint for the gateway itself
    location /health {
        access_log off;
        return 200 '{"status":"UP","service":"api-gateway","architecture":"hybrid"}';
        add_header Content-Type application/json;
    }

    # ==========================================
    # ALL API ROUTES - Proxied to backend monolith
    # ==========================================
    
    # All API routes go to the monolith
    location /api/ {
        proxy_pass http://backend-monolith;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Headers to identify requests coming through gateway
        proxy_set_header X-Gateway-Request "true";
        proxy_set_header X-Architecture "hybrid";
        
        # Timeout settings
        proxy_connect_timeout 30s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # File upload settings
        client_max_body_size 100M;
        proxy_request_buffering off;
    }

    # ==========================================
    # Actuator endpoints (health checks, metrics)
    # ==========================================
    
    location /actuator/ {
        proxy_pass http://backend-monolith;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        access_log off;  # Don't log health checks
    }

    # ==========================================
    # STATIC FILES AND UPLOADS
    # ==========================================
    
    # Uploads and static files
    location /uploads/ {
        proxy_pass http://backend-monolith;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # File serving optimizations
        expires 1d;
        add_header Cache-Control "public, immutable";
    }

    # ==========================================
    # ERROR HANDLING AND FALLBACKS
    # ==========================================
    
    # Default location for unmatched routes
    location / {
        return 404 '{"error":"Route not found in hybrid architecture","gateway":"nginx","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        return 502 '{"error":"Backend service temporarily unavailable","gateway":"nginx","timestamp":"$time_iso8601","suggestion":"Check if backend monolith is running"}';
        add_header Content-Type application/json;
    }

    # ==========================================
    # MONITORING AND DEBUG
    # ==========================================
    
    # Gateway status endpoint
    location /gateway/status {
        access_log off;
        return 200 '{"gateway":"nginx","architecture":"hybrid","backend":"monolith","timestamp":"$time_iso8601"}';
        add_header Content-Type application/json;
    }

    # Access log format for debugging
    access_log /var/log/nginx/access.log combined;
    error_log /var/log/nginx/error.log warn;
}