# nginx-gateway.conf
# NGINX API Gateway Configuration for 100% Microservices Architecture
# Running on port 8080 to avoid requiring sudo privileges

events {
    worker_connections 1024;
}

http {
    include       /opt/homebrew/etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Upstream servers (microservices) - Node.js services running locally
    upstream user-service {
        server localhost:8082;
    }

    upstream application-service {
        server localhost:8083;
    }

    upstream evaluation-service {
        server localhost:8084;
    }

    upstream notification-service {
        server localhost:8085;
    }

# Health check endpoint map
map $uri $backend_service {
    default "";
    "~^/api/users" user-service;
    "~^/api/applications" application-service;
    "~^/api/evaluations" evaluation-service;
    "~^/api/notifications" notification-service;
    "~^/api/interviews" evaluation-service;
    "~^/api/auth" user-service;
    "~^/api/admin" user-service;
    "~^/api/professor" user-service;
}

server {
    listen 8080;
    server_name localhost;

    # Handle preflight requests
    location / {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' 'http://localhost:5173';
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS';
            add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control';
            add_header 'Access-Control-Allow-Credentials' 'true';
            add_header 'Access-Control-Max-Age' 1728000;
            add_header 'Content-Type' 'text/plain charset=UTF-8';
            add_header 'Content-Length' 0;
            return 204;
        }
    }

    # Health check endpoint for the gateway itself
    location /health {
        access_log off;
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Content-Type' 'application/json' always;
        return 200 '{"status":"UP","service":"api-gateway","architecture":"microservices"}';
    }

    # ==========================================
    # USER SERVICE ROUTES
    # ==========================================
    
    # Authentication routes (login, register, etc.)
    location /api/auth {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "user-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
        
        # Timeout settings for auth operations
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # User management routes
    location /api/users {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "user-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # Admin routes (user management)
    location /api/admin {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "user-service";
        proxy_set_header X-Admin-Request "true";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # Professor routes
    location /api/professor {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://user-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "user-service";
        proxy_set_header X-Professor-Request "true";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # ==========================================
    # APPLICATION SERVICE ROUTES
    # ==========================================
    
    # Applications management
    location /api/applications {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://application-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "application-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
        
        # Longer timeout for file uploads
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Increase body size for document uploads
        client_max_body_size 50M;
    }

    # Students management (part of applications)
    location /api/students {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://application-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "application-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # Parents and guardians (part of applications)
    location /api/parents {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://application-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "application-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    location /api/guardians {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://application-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "application-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # ==========================================
    # EVALUATION SERVICE ROUTES
    # ==========================================
    
    # Evaluations management
    location /api/evaluations {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://evaluation-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "evaluation-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # Interviews management
    location /api/interviews {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://evaluation-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "evaluation-service";
        proxy_set_header X-Interview-Request "true";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # Reports (evaluation-based reports)
    location /api/reports {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://evaluation-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "evaluation-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # ==========================================
    # NOTIFICATION SERVICE ROUTES
    # ==========================================
    
    # Email and notification management
    location /api/notifications {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://notification-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "notification-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
        
        # Longer timeout for email operations
        proxy_connect_timeout 45s;
        proxy_send_timeout 45s;
        proxy_read_timeout 45s;
    }

    # Email templates and management
    location /api/email {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://notification-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "notification-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
    }

    # ==========================================
    # FILE UPLOAD AND STATIC FILES
    # ==========================================
    
    # Document uploads (routed to application service)
    location /api/documents {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, X-Requested-With, Content-Type, Accept, Authorization, Cache-Control' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        
        proxy_pass http://application-service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Service-Name "application-service";
        
        # Hide backend CORS headers to avoid conflicts
        proxy_hide_header 'Access-Control-Allow-Origin';
        proxy_hide_header 'Access-Control-Allow-Methods';
        proxy_hide_header 'Access-Control-Allow-Headers';
        proxy_hide_header 'Access-Control-Allow-Credentials';
        
        # File upload specific settings
        client_max_body_size 100M;
        proxy_connect_timeout 300s;
        proxy_send_timeout 300s;
        proxy_read_timeout 300s;
        proxy_request_buffering off;
    }

    # ==========================================
    # MONITORING AND DEBUG
    # ==========================================
    
    # Gateway status endpoint
    location /gateway/status {
        access_log off;
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Content-Type' 'application/json' always;
        return 200 '{"gateway":"nginx","architecture":"100% microservices","services":["user-service","application-service","evaluation-service","notification-service"],"timestamp":"$time_iso8601"}';
    }

    # ==========================================
    # ERROR HANDLING AND FALLBACKS
    # ==========================================
    
    # Default location for unmatched routes
    location ~ ^/((?!api/|health|gateway/).*)$ {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Content-Type' 'application/json' always;
        return 404 '{"error":"Route not found in microservices architecture","gateway":"nginx","timestamp":"$time_iso8601"}';
    }

    # Custom error pages
    error_page 502 503 504 /50x.html;
    location = /50x.html {
        add_header 'Access-Control-Allow-Origin' 'http://localhost:5173' always;
        add_header 'Content-Type' 'application/json' always;
        return 502 '{"error":"Service temporarily unavailable","gateway":"nginx","timestamp":"$time_iso8601","suggestion":"Check if microservices are running"}';
    }
}
}