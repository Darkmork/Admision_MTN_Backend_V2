# user-service/src/main/resources/application.yml

server:
  port: 8082
  servlet:
    context-path: /

spring:
  application:
    name: user-service
    
  # Database Configuration
  datasource:
    url: ${DB_URL:jdbc:postgresql://users-db:5432/users_db}
    username: ${DB_USERNAME:users_admin}
    password: ${DB_PASSWORD:users123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      leak-detection-threshold: 60000
      
  # JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        jdbc:
          time_zone: UTC
        order_inserts: true
        order_updates: true
        batch_size: 15
        generate_statistics: false
    open-in-view: false
    
  # Flyway Configuration
  flyway:
    enabled: true
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true
    out-of-order: false
    
  # Cache Configuration
  cache:
    type: simple
    cache-names: users, roles
    
  # RabbitMQ Configuration
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:admin}
    password: ${RABBITMQ_PASSWORD:admin123}
    virtual-host: ${RABBITMQ_VHOST:/}
    connection-timeout: 60s
    template:
      mandatory: true
      receive-timeout: 60s
      reply-timeout: 60s
    publisher-confirm-type: correlated
    publisher-returns: true
    
  # Jackson Configuration
  jackson:
    time-zone: UTC
    date-format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'
    serialization:
      write-dates-as-timestamps: false
      write-durations-as-timestamps: false
    deserialization:
      adjust-dates-to-context-time-zone: false
      
  # Security Configuration
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${KEYCLOAK_ISSUER_URI:http://keycloak:8080/realms/mtn-admision}
          jwk-set-uri: ${KEYCLOAK_JWK_SET_URI:http://keycloak:8080/realms/mtn-admision/protocol/openid-connect/certs}

# Eureka Client Configuration
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_SERVER_URL:http://eureka-server:8761/eureka/}
    register-with-eureka: true
    fetch-registry: true
    registry-fetch-interval-seconds: 30
    
  instance:
    prefer-ip-address: true
    hostname: ${HOSTNAME:user-service}
    instance-id: ${spring.application.name}:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    health-check-url-path: /actuator/health
    status-page-url-path: /actuator/info
    home-page-url: /
    metadata-map:
      management.port: ${management.server.port:${server.port}}

# Management Configuration
management:
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
      show-components: always
  health:
    probes:
      enabled: true
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    distribution:
      percentiles-histogram:
        http.server.requests: true
      percentiles:
        http.server.requests: 0.5, 0.9, 0.95, 0.99
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4317}

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /v3/api-docs
    enabled: true
  swagger-ui:
    path: /swagger-ui.html
    enabled: true
  info:
    title: MTN User Service API
    version: 1.0.0
    description: Microservicio de gestión de usuarios para sistema de admisión MTN
  servers:
    - url: http://localhost:8080
      description: API Gateway (Production)
    - url: http://localhost:8082  
      description: Direct Service (Development)

# OpenTelemetry Configuration
otel:
  exporter:
    otlp:
      endpoint: ${OTEL_EXPORTER_OTLP_ENDPOINT:http://otel-collector:4317}
  resource:
    attributes:
      service.name: user-service
      service.version: 1.0.0
      environment: ${SPRING_PROFILES_ACTIVE:dev}

# Application Configuration
app:
  security:
    jwt:
      authorities-claim-name: roles
      authority-prefix: ROLE_
  
  pagination:
    default-page-size: 20
    max-page-size: 100
    
  validation:
    rut:
      enabled: true
      required: false
    email:
      required: true
      
  outbox:
    batch-size: 100
    poll-interval: PT5S
    retry-max-attempts: 3
    retry-backoff: PT10S
    
  idempotency:
    cache-ttl: PT5M
    header-name: Idempotency-Key

# Logging Configuration
logging:
  level:
    com.desafios.mtn.userservice: INFO
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.flywaydb: INFO
    au.com.dius.pact: INFO
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}"

---
# Development Profile
spring:
  config:
    activate:
      on-profile: dev
      
  datasource:
    url: jdbc:postgresql://localhost:5433/users_db
    username: users_admin
    password: users123
    
  jpa:
    show-sql: true
    properties:
      hibernate:
        generate_statistics: true
        
  rabbitmq:
    host: localhost
    
eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
      
management:
  tracing:
    sampling:
      probability: 1.0
  otlp:
    tracing:
      endpoint: http://localhost:4317

logging:
  level:
    com.desafios.mtn.userservice: DEBUG
    org.springframework.security: DEBUG
    
---
# Test Profile  
spring:
  config:
    activate:
      on-profile: test
      
  datasource:
    url: jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    username: sa
    password: ""
    driver-class-name: org.h2.Driver
    
  jpa:
    hibernate:
      ddl-auto: create-drop
    database-platform: org.hibernate.dialect.H2Dialect
    
  flyway:
    enabled: false
    
  rabbitmq:
    host: localhost
    port: 5673
    
eureka:
  client:
    enabled: false
    
management:
  tracing:
    sampling:
      probability: 0.0
      
logging:
  level:
    root: WARN
    com.desafios.mtn.userservice: INFO
    org.testcontainers: INFO
    
---
# Production Profile
spring:
  config:
    activate:
      on-profile: prod
      
  jpa:
    show-sql: false
    properties:
      hibernate:
        generate_statistics: false
        
management:
  tracing:
    sampling:
      probability: 0.1
  endpoint:
    health:
      show-details: when-authorized
      
logging:
  level:
    com.desafios.mtn.userservice: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    root: WARN