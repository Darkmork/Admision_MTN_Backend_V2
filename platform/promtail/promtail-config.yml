# Promtail Configuration for MTN Admission System
# PII masking and trace correlation enabled

server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push
    tenant_id: mtn-admission

scrape_configs:
  # Spring Boot Application Logs with PII Masking
  - job_name: spring-boot-logs
    static_configs:
      - targets:
          - localhost
        labels:
          job: spring-boot
          environment: production
          __path__: /var/log/spring-boot/*.log
    
    pipeline_stages:
      # Parse JSON structured logs from Spring Boot
      - json:
          expressions:
            timestamp: timestamp
            level: level
            logger: logger
            message: message
            trace_id: traceId
            span_id: spanId
            app: app
            thread: thread
            correlation_id: correlationId
      
      # Extract timestamp and convert to RFC3339
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
          location: 'America/Santiago'
      
      # PII Masking - Email addresses
      - regex:
          expression: '(?i)(email["\s]*[:=]["\s]*)([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})'
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "(?i)(email[\"\\s]*[:=][\"\\s]*)([a-zA-Z0-9._%+-]{1,3})[a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}" .Value "${1}${2}***@***" }}'
      
      # PII Masking - Chilean RUT (XX.XXX.XXX-X)
      - regex:
          expression: '(?i)(rut["\s]*[:=]["\s]*)([0-9]{1,2})\.[0-9]{3}\.[0-9]{3}-[0-9kK]'
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "(?i)(rut[\"\\s]*[:=][\"\\s]*)([0-9]{1,2})\\.[0-9]{3}\\.[0-9]{3}-[0-9kK]" .Value "${1}${2}.***.***-*" }}'
      
      # PII Masking - Chilean phone numbers (+56 9 XXXX XXXX)
      - regex:
          expression: '(?i)(phone["\s]*[:=]["\s]*)(\\+?56\\s?9\\s?)([0-9]{1,2})[0-9]{2,3}\\s?[0-9]{4}'
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "(?i)(phone[\"\\s]*[:=][\"\\s]*)(\\\\+?56\\\\s?9\\\\s?)([0-9]{1,2})[0-9]{2,3}\\\\s?[0-9]{4}" .Value "${1}${2}${3}***-****" }}'
      
      # Extract application name from log path
      - regex:
          expression: '/var/log/spring-boot/(?P<app_name>[^/]+)\.log'
          source: __path__
      
      # Set labels for Loki indexing
      - labels:
          app: app
          level: level
          logger: logger
          trace_id: trace_id
          correlation_id: correlation_id
      
      # Output the processed message
      - output:
          source: message

  # Container logs from Kubernetes
  - job_name: kubernetes-pods
    kubernetes_sd_configs:
      - role: pod
    
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_controller_name]
        regex: '([0-9a-z-.]+?)(-[0-9a-f]{8,10})?'
        action: replace
        target_label: __tmp_controller_name
      
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
        action: replace
        target_label: app
      
      - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_component]
        action: replace
        target_label: component
      
      - source_labels: [__meta_kubernetes_pod_node_name]
        action: replace
        target_label: node_name
      
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: namespace
      
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: pod
      
      - source_labels: [__meta_kubernetes_pod_container_name]
        action: replace
        target_label: container
      
      - replacement: /var/log/pods/*$1/*.log
        separator: /
        source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
        target_label: __path__
    
    pipeline_stages:
      # Parse container logs
      - cri: {}
      
      # Extract structured data if available
      - json:
          expressions:
            level: level
            message: msg
            trace_id: trace_id
            span_id: span_id
            correlation_id: correlation_id
            timestamp: '@timestamp'
      
      # PII Masking for container logs (same patterns as above)
      - regex:
          expression: '([a-zA-Z0-9._%+-]{1,3})[a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}'
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "([a-zA-Z0-9._%+-]{1,3})[a-zA-Z0-9._%+-]*@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}" .Value "${1}***@***" }}'
      
      # Mask RUT numbers
      - regex:
          expression: '([0-9]{1,2})\.[0-9]{3}\.[0-9]{3}-[0-9kK]'
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "([0-9]{1,2})\\.[0-9]{3}\\.[0-9]{3}-[0-9kK]" .Value "${1}.***.***-*" }}'
      
      # Set labels
      - labels:
          level: level
          trace_id: trace_id
          correlation_id: correlation_id

  # RabbitMQ logs
  - job_name: rabbitmq
    static_configs:
      - targets:
          - localhost
        labels:
          job: rabbitmq
          component: messaging
          __path__: /var/log/rabbitmq/*.log
    
    pipeline_stages:
      # Parse RabbitMQ log format
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3}) \[(?P<level>\w+)\] <(?P<pid>\d+\.\d+\.\d+)> (?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000'
          location: 'America/Santiago'
      
      - labels:
          level: level
          component: rabbitmq
          pid: pid

  # Database logs (PostgreSQL)
  - job_name: postgresql
    static_configs:
      - targets:
          - localhost
        labels:
          job: postgresql
          component: database
          __path__: /var/log/postgresql/*.log
    
    pipeline_stages:
      # Parse PostgreSQL log format
      - regex:
          expression: '^(?P<timestamp>\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}\.\d{3} [A-Z]{3}) \[(?P<pid>\d+)\] (?P<level>LOG|ERROR|WARNING|FATAL|PANIC):  (?P<message>.*)'
      
      - timestamp:
          source: timestamp
          format: '2006-01-02 15:04:05.000 MST'
          location: 'America/Santiago'
      
      # Mask potential PII in SQL queries
      - regex:
          expression: "('[^']*@[^']*')"
          source: message
      - template:
          source: message
          template: '{{ regexReplaceAll "(\047[^@\047]{1,3})[^@\047]*@[^\047]*\047" .Value "${1}***@***\047" }}'
      
      - labels:
          level: level
          component: postgresql
          pid: pid

  # Nginx/API Gateway logs
  - job_name: nginx-gateway
    static_configs:
      - targets:
          - localhost
        labels:
          job: nginx
          component: gateway
          __path__: /var/log/nginx/*.log
    
    pipeline_stages:
      # Parse nginx access log format with trace correlation
      - regex:
          expression: '^(?P<remote_addr>[^\s]+) - (?P<remote_user>[^\s]+) \[(?P<time_local>[^\]]+)\] "(?P<method>\S+) (?P<path>\S+) (?P<protocol>\S+)" (?P<status>\d+) (?P<bytes_sent>\d+) "(?P<referer>[^"]*)" "(?P<user_agent>[^"]*)" "(?P<trace_id>[^"]*)" "(?P<correlation_id>[^"]*)" (?P<request_time>[\d.]+)'
      
      - timestamp:
          source: time_local
          format: '02/Jan/2006:15:04:05 -0700'
          location: 'America/Santiago'
      
      # Mask IP addresses (keep first octet only)
      - regex:
          expression: '^(\d+)\.\d+\.\d+\.\d+'
          source: remote_addr
      - template:
          source: remote_addr
          template: '{{ regexReplaceAll "^(\\d+)\\.\\d+\\.\\d+\\.\\d+" .Value "${1}.***.***.***" }}'
      
      - labels:
          method: method
          status: status
          trace_id: trace_id
          correlation_id: correlation_id
          component: nginx