apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: mesh-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: mtn-admission-system
    app.kubernetes.io/component: security
    app.kubernetes.io/version: "1.0"
    app.kubernetes.io/managed-by: platform-security-team
spec:
  # Apply mTLS to all services in admissions namespace
  host: "*.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30s
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 50
        http2MaxRequests: 100
        maxRequestsPerConnection: 10
        maxRetries: 3
        consecutiveGatewayErrors: 5
        interval: 30s
        baseEjectionTime: 30s
        maxEjectionPercent: 50
        minHealthPercent: 50
    # Circuit breaker settings for resilience
    outlierDetection:
      consecutive5xxErrors: 3
      consecutiveGatewayErrors: 3
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 50
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: api-gateway-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: api-gateway
    app.kubernetes.io/component: security
spec:
  host: "api-gateway.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 200
        connectTimeout: 10s
      http:
        http1MaxPendingRequests: 100
        http2MaxRequests: 200
        maxRequestsPerConnection: 10
        idleTimeout: 30s
        h2UpgradePolicy: UPGRADE
    # Load balancing for gateway
    loadBalancer:
      simple: LEAST_CONN
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: application-service-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: application-service
    app.kubernetes.io/component: security
spec:
  host: "application-service.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 50
        connectTimeout: 20s
      http:
        http1MaxPendingRequests: 30
        http2MaxRequests: 50
        maxRequestsPerConnection: 5
    loadBalancer:
      simple: ROUND_ROBIN
    # Retry policy for application submissions
    retryPolicy:
      attempts: 3
      perTryTimeout: 30s
      retryOn: 5xx,reset,connect-failure,refused-stream
      retryRemoteLocalities: true
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: evaluation-service-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: evaluation-service
    app.kubernetes.io/component: security
spec:
  host: "evaluation-service.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 30
        connectTimeout: 15s
      http:
        http1MaxPendingRequests: 20
        http2MaxRequests: 30
        maxRequestsPerConnection: 3
    loadBalancer:
      simple: LEAST_REQUEST
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: notification-service-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: notification-service
    app.kubernetes.io/component: security
spec:
  host: "notification-service.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 20
        connectTimeout: 10s
      http:
        http1MaxPendingRequests: 15
        http2MaxRequests: 20
        maxRequestsPerConnection: 2
    loadBalancer:
      simple: ROUND_ROBIN
    # Longer timeout for email delivery
    retryPolicy:
      attempts: 3
      perTryTimeout: 60s
      retryOn: 5xx,reset,connect-failure,refused-stream
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: user-service-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: user-service
    app.kubernetes.io/component: security
spec:
  host: "user-service.admissions.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 40
        connectTimeout: 15s
      http:
        http1MaxPendingRequests: 25
        http2MaxRequests: 40
        maxRequestsPerConnection: 5
    loadBalancer:
      simple: LEAST_CONN
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: cross-namespace-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: cross-namespace
    app.kubernetes.io/component: security
spec:
  # Configure mTLS for cross-namespace communication
  host: "*.postgres.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 10
        connectTimeout: 30s
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: rabbitmq-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: rabbitmq
    app.kubernetes.io/component: security
spec:
  host: "*.rabbitmq.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 15
        connectTimeout: 20s
        tcpKeepalive:
          time: 600s
          interval: 60s
---
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: keycloak-mtls
  namespace: admissions
  labels:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/component: security
spec:
  host: "*.keycloak.svc.cluster.local"
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
    connectionPool:
      tcp:
        maxConnections: 25
        connectTimeout: 15s
      http:
        http1MaxPendingRequests: 20
        http2MaxRequests: 25
        maxRequestsPerConnection: 3
        idleTimeout: 60s
    # Critical for auth service - strict retries
    retryPolicy:
      attempts: 2
      perTryTimeout: 15s
      retryOn: 5xx,reset,connect-failure,refused-stream