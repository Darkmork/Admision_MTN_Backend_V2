# External Secrets for Application Service
# Automated secret rotation and management
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: application-service-database
  namespace: admissions
  labels:
    app.kubernetes.io/name: application-service
    app.kubernetes.io/component: database-secrets
    app.kubernetes.io/part-of: mtn-admission
spec:
  # Refresh every 15 minutes for database credentials
  refreshInterval: "15m"
  
  # Use the admission namespace secret store
  secretStoreRef:
    name: mtn-vault-admission
    kind: SecretStore
    
  # Target Kubernetes secret configuration
  target:
    name: application-service-db-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: application-service
          app.kubernetes.io/component: database
      data:
        # Spring Boot database configuration
        SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres.infrastructure.svc.cluster.local:5432/{{ .database_name }}"
        SPRING_DATASOURCE_USERNAME: "{{ .username }}"
        SPRING_DATASOURCE_PASSWORD: "{{ .password }}"
        SPRING_DATASOURCE_DRIVER_CLASS_NAME: "org.postgresql.Driver"
        
        # Additional PostgreSQL configuration for Chilean timezone
        SPRING_DATASOURCE_HIKARI_CONNECTION_INIT_SQL: "SET timezone = 'America/Santiago'"
        SPRING_JPA_PROPERTIES_HIBERNATE_JDBC_TIME_ZONE: "America/Santiago"
        
  # Vault secret mappings
  data:
    - secretKey: username
      remoteRef:
        key: database/creds/mtn-application-rw
        property: username
        
    - secretKey: password
      remoteRef:
        key: database/creds/mtn-application-rw
        property: password
        
    - secretKey: database_name
      remoteRef:
        key: kv/application-service/database
        property: database_name

---
# SMTP/Email credentials for notifications
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: application-service-smtp
  namespace: admissions
  labels:
    app.kubernetes.io/name: application-service
    app.kubernetes.io/component: smtp-secrets
spec:
  refreshInterval: "1h"
  
  secretStoreRef:
    name: mtn-vault-admission
    kind: SecretStore
    
  target:
    name: application-service-smtp-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: application-service
          app.kubernetes.io/component: smtp
      data:
        SMTP_HOST: "{{ .smtp_host }}"
        SMTP_PORT: "{{ .smtp_port }}"
        SMTP_USERNAME: "{{ .smtp_username }}"
        SMTP_PASSWORD: "{{ .smtp_password }}"
        SMTP_AUTH: "{{ .smtp_auth }}"
        SMTP_STARTTLS: "{{ .smtp_starttls }}"
        
        # Institutional email configuration
        INSTITUTIONAL_EMAIL_FROM_NAME: "{{ .institutional_from_name }}"
        INSTITUTIONAL_EMAIL_REPLY_TO: "{{ .institutional_reply_to }}"
        INSTITUTIONAL_EMAIL_SUPPORT: "{{ .institutional_support }}"
        
  data:
    - secretKey: smtp_host
      remoteRef:
        key: smtp/creds/institutional
        property: host
        
    - secretKey: smtp_port
      remoteRef:
        key: smtp/creds/institutional
        property: port
        
    - secretKey: smtp_username
      remoteRef:
        key: smtp/creds/institutional
        property: username
        
    - secretKey: smtp_password
      remoteRef:
        key: smtp/creds/institutional
        property: password
        
    - secretKey: smtp_auth
      remoteRef:
        key: smtp/creds/institutional
        property: auth
        
    - secretKey: smtp_starttls
      remoteRef:
        key: smtp/creds/institutional
        property: starttls
        
    - secretKey: institutional_from_name
      remoteRef:
        key: kv/application-service/email
        property: institutional_from_name
        
    - secretKey: institutional_reply_to
      remoteRef:
        key: kv/application-service/email
        property: institutional_reply_to
        
    - secretKey: institutional_support
      remoteRef:
        key: kv/application-service/email
        property: institutional_support

---
# JWT signing keys with automatic rotation
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: application-service-jwt
  namespace: admissions
  labels:
    app.kubernetes.io/name: application-service
    app.kubernetes.io/component: jwt-secrets
spec:
  # Refresh every 6 hours for JWT keys
  refreshInterval: "6h"
  
  secretStoreRef:
    name: mtn-vault-admission
    kind: SecretStore
    
  target:
    name: application-service-jwt-keys
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: application-service
          app.kubernetes.io/component: jwt
        annotations:
          # Chilean compliance annotation
          mtn.cl/contains-jwt-keys: "true"
          mtn.cl/rotation-policy: "6h"
      data:
        JWT_SECRET: "{{ .jwt_secret }}"
        JWT_ISSUER: "{{ .jwt_issuer }}"
        JWT_AUDIENCE: "{{ .jwt_audience }}"
        JWT_EXPIRATION: "{{ .jwt_expiration }}"
        
        # OIDC/Keycloak integration
        OIDC_ISSUER_URI: "{{ .oidc_issuer_uri }}"
        OIDC_CLIENT_ID: "{{ .oidc_client_id }}"
        OIDC_CLIENT_SECRET: "{{ .oidc_client_secret }}"
        
  data:
    - secretKey: jwt_secret
      remoteRef:
        key: jwt/sign/application-service
        property: secret_key
        
    - secretKey: jwt_issuer
      remoteRef:
        key: kv/application-service/jwt
        property: issuer
        
    - secretKey: jwt_audience
      remoteRef:
        key: kv/application-service/jwt
        property: audience
        
    - secretKey: jwt_expiration
      remoteRef:
        key: kv/application-service/jwt
        property: expiration
        
    - secretKey: oidc_issuer_uri
      remoteRef:
        key: kv/application-service/oidc
        property: issuer_uri
        
    - secretKey: oidc_client_id
      remoteRef:
        key: kv/application-service/oidc
        property: client_id
        
    - secretKey: oidc_client_secret
      remoteRef:
        key: kv/application-service/oidc
        property: client_secret

---
# External API credentials for Chilean services
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: application-service-external-apis
  namespace: admissions
  labels:
    app.kubernetes.io/name: application-service
    app.kubernetes.io/component: external-api-secrets
spec:
  refreshInterval: "24h"
  
  secretStoreRef:
    name: mtn-vault-admission
    kind: SecretStore
    
  target:
    name: application-service-external-api-creds
    creationPolicy: Owner
    template:
      type: Opaque
      metadata:
        labels:
          app.kubernetes.io/name: application-service
          app.kubernetes.io/component: external-apis
        annotations:
          mtn.cl/contains-chile-api-keys: "true"
      data:
        # Chilean RUT validation service
        REGISTRO_CIVIL_API_KEY: "{{ .registro_civil_api_key }}"
        REGISTRO_CIVIL_API_URL: "{{ .registro_civil_api_url }}"
        
        # Chilean address validation service
        CORREOS_CHILE_API_KEY: "{{ .correos_chile_api_key }}"
        CORREOS_CHILE_API_URL: "{{ .correos_chile_api_url }}"
        
  data:
    - secretKey: registro_civil_api_key
      remoteRef:
        key: external-apis/creds/registro-civil
        property: api_key
        
    - secretKey: registro_civil_api_url
      remoteRef:
        key: external-apis/creds/registro-civil
        property: api_url
        
    - secretKey: correos_chile_api_key
      remoteRef:
        key: external-apis/creds/correos-chile
        property: api_key
        
    - secretKey: correos_chile_api_url
      remoteRef:
        key: external-apis/creds/correos-chile
        property: api_url