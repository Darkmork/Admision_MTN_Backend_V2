name: 'Preflight E2E Tests'

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  preflight:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: Admisión_MTN_DB
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: 🛒 Checkout Backend Repository
      uses: actions/checkout@v4
      with:
        path: backend

    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json

    - name: 🔧 Setup Backend Environment
      working-directory: backend
      run: |
        echo "Setting up database schema..."
        PGPASSWORD=admin123 psql -h localhost -U admin -d "Admisión_MTN_DB" -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

        echo "Installing Node.js dependencies..."
        npm ci

    - name: 📦 Install NGINX
      run: |
        sudo apt-get update
        sudo apt-get install -y nginx
        nginx -v

    - name: 🚀 Start Mock Services
      working-directory: backend
      run: |
        echo "Starting mock services..."
        node mock-user-service.js > user-service.log 2>&1 &
        node mock-application-service.js > app-service.log 2>&1 &
        node mock-evaluation-service.js > eval-service.log 2>&1 &
        node mock-notification-service.js > notif-service.log 2>&1 &
        node mock-dashboard-service.js > dash-service.log 2>&1 &
        node mock-guardian-service.js > guardian-service.log 2>&1 &
        echo "Mock services started in background"

    - name: 🌐 Start NGINX Gateway
      working-directory: backend
      run: |
        echo "Configuring NGINX gateway..."
        # Update nginx config for Linux (use epoll instead of kqueue)
        sed 's/use kqueue;/use epoll;/' local-gateway.conf > local-gateway-linux.conf

        # Start NGINX with our config
        sudo nginx -c "$(pwd)/local-gateway-linux.conf"

        echo "NGINX gateway started on port 8080"

    - name: 🌱 Seed Test Data
      working-directory: backend
      run: |
        chmod +x scripts/seed-test-data.sh
        ./scripts/seed-test-data.sh

    - name: 🩺 Health Check (All Services + Gateway)
      working-directory: backend
      run: |
        chmod +x scripts/ci-health-check.sh
        GATEWAY_URL=http://localhost:8080 ./scripts/ci-health-check.sh

    - name: 🧪 Run Backend Tests
      working-directory: backend
      run: |
        npm test || echo "No tests configured yet"
      continue-on-error: true

    - name: 📦 Upload Artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: preflight-artifacts
        path: |
          backend/*.log
        retention-days: 30

    - name: 🔍 Debug on Failure
      if: failure()
      working-directory: backend
      run: |
        echo "=== User Service Logs ==="
        cat user-service.log || echo "No user service log"

        echo "=== Application Service Logs ==="
        cat app-service.log || echo "No application service log"

        echo "=== Database Status ==="
        PGPASSWORD=admin123 psql -h localhost -U admin -d "Admisión_MTN_DB" -c "\dt" || echo "Database not available"

        echo "=== Service Status ==="
        curl -v http://localhost:8082/health || true
        curl -v http://localhost:8083/health || true

  frontend-e2e:
    runs-on: ubuntu-latest
    needs: preflight
    if: always() && needs.preflight.result == 'success'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: Admisión_MTN_DB
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: 🛒 Checkout Backend Repository
      uses: actions/checkout@v4
      with:
        path: backend

    - name: 🛒 Checkout Frontend Repository
      uses: actions/checkout@v4
      with:
        repository: Darkmork/Admision_MTN_front
        path: frontend

    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 🔧 Setup Backend Environment
      working-directory: backend
      run: |
        # Setup database
        PGPASSWORD=admin123 psql -h localhost -U admin -d "Admisión_MTN_DB" -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

        # Install backend dependencies
        npm ci

    - name: 📦 Install NGINX
      run: |
        sudo apt-get update
        sudo apt-get install -y nginx

    - name: 🚀 Start Backend Infrastructure
      working-directory: backend
      run: |
        # Start mock services
        node mock-user-service.js > user-service.log 2>&1 &
        node mock-application-service.js > app-service.log 2>&1 &
        node mock-evaluation-service.js > eval-service.log 2>&1 &
        node mock-notification-service.js > notif-service.log 2>&1 &
        node mock-dashboard-service.js > dash-service.log 2>&1 &
        node mock-guardian-service.js > guardian-service.log 2>&1 &

        # Configure and start NGINX
        sed 's/use kqueue;/use epoll;/' local-gateway.conf > local-gateway-linux.conf
        sudo nginx -c "$(pwd)/local-gateway-linux.conf"

        # Seed test data
        chmod +x scripts/seed-test-data.sh
        ./scripts/seed-test-data.sh

    - name: 📦 Install Frontend Dependencies
      working-directory: frontend
      run: |
        npm ci
        npx playwright install --with-deps

    - name: 🚀 Start Frontend Application
      working-directory: frontend
      run: |
        nohup npm run dev > frontend.log 2>&1 &

        # Wait for frontend
        timeout=60
        while [ $timeout -gt 0 ]; do
          if curl -s http://localhost:5173 > /dev/null; then
            echo "Frontend is ready!"
            break
          fi
          sleep 2
          timeout=$((timeout - 2))
        done

    - name: ⏳ Health Check (Gateway + Services)
      working-directory: backend
      run: |
        chmod +x scripts/ci-health-check.sh
        GATEWAY_URL=http://localhost:8080 ./scripts/ci-health-check.sh

    - name: 🎭 Run Playwright E2E Tests
      working-directory: frontend
      run: npm run e2e || echo "E2E tests not configured yet"
      continue-on-error: true

    - name: 📊 Upload Playwright Report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-report
        path: frontend/playwright-report/
        retention-days: 30

  postman-tests:
    runs-on: ubuntu-latest
    needs: preflight
    if: always() && needs.preflight.result == 'success'

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: Admisión_MTN_DB
          POSTGRES_USER: admin
          POSTGRES_PASSWORD: admin123
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: 🛒 Checkout Backend Repository
      uses: actions/checkout@v4
      with:
        path: backend

    - name: 🟢 Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: 📮 Install Newman
      run: npm install -g newman

    - name: 📦 Install NGINX
      run: |
        sudo apt-get update
        sudo apt-get install -y nginx

    - name: 🔧 Setup and Start Backend
      working-directory: backend
      run: |
        # Setup database
        PGPASSWORD=admin123 psql -h localhost -U admin -d "Admisión_MTN_DB" -c "CREATE EXTENSION IF NOT EXISTS \"uuid-ossp\";"

        # Install dependencies
        npm ci

        # Start mock services
        node mock-user-service.js > user-service.log 2>&1 &
        node mock-application-service.js > app-service.log 2>&1 &
        node mock-evaluation-service.js > eval-service.log 2>&1 &
        node mock-notification-service.js > notif-service.log 2>&1 &
        node mock-dashboard-service.js > dash-service.log 2>&1 &
        node mock-guardian-service.js > guardian-service.log 2>&1 &

        # Configure and start NGINX
        sed 's/use kqueue;/use epoll;/' local-gateway.conf > local-gateway-linux.conf
        sudo nginx -c "$(pwd)/local-gateway-linux.conf"

        # Seed test data
        chmod +x scripts/seed-test-data.sh
        ./scripts/seed-test-data.sh

        # Health check with retry logic
        chmod +x scripts/ci-health-check.sh
        GATEWAY_URL=http://localhost:8080 ./scripts/ci-health-check.sh

    - name: 📮 Run Postman Collection
      working-directory: backend
      run: |
        if [ -f "tests/postman/MTN_Preflight.postman_collection.json" ]; then
          newman run tests/postman/MTN_Preflight.postman_collection.json \
            -e tests/postman/MTN_env_local.postman_environment.json \
            --reporters cli,json,junit \
            --reporter-junit-export newman-results.xml \
            --reporter-json-export newman-results.json
        else
          echo "Postman collection not found, skipping"
        fi
      continue-on-error: true

    - name: 📊 Upload Newman Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: newman-results
        path: |
          backend/newman-results.xml
          backend/newman-results.json
        retention-days: 30