{{- if .Values.rollout.enabled }}
apiVersion: argoproj.io/v1alpha1
kind: Rollout
metadata:
  name: {{ include "<service>.fullname" . }}
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    {{- if eq .Values.rollout.strategy "canary" }}
    canary:
      {{- with .Values.rollout.canary.steps }}
      steps:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rollout.canary.trafficRouting }}
      trafficRouting:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.rollout.canary.analysis }}
      analysis:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.rollout.canary.maxSurge }}
      maxSurge: {{ .Values.rollout.canary.maxSurge }}
      {{- end }}
      {{- if .Values.rollout.canary.maxUnavailable }}
      maxUnavailable: {{ .Values.rollout.canary.maxUnavailable }}
      {{- end }}
      {{- if .Values.rollout.autoRollbackOnFailure }}
      abortScaleDownDelaySeconds: 30
      scaleDownDelaySeconds: 30
      {{- end }}
    {{- else if eq .Values.rollout.strategy "blueGreen" }}
    blueGreen:
      activeService: {{ include "<service>.fullname" . }}
      previewService: {{ include "<service>.fullname" . }}-preview
      autoPromotionEnabled: false
      scaleDownDelaySeconds: 30
      prePromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: {{ include "<service>.fullname" . }}-preview
      postPromotionAnalysis:
        templates:
        - templateName: success-rate
        args:
        - name: service-name
          value: {{ include "<service>.fullname" . }}
    {{- end }}
  revisionHistoryLimit: {{ .Values.rollout.revisionHistoryLimit | default 3 }}
  progressDeadlineSeconds: {{ .Values.rollout.progressDeadlineSeconds | default 600 }}
  selector:
    matchLabels:
      {{- include "<service>.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
      labels:
        {{- include "<service>.selectorLabels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.commonLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        version: {{ .Values.image.tag | default .Chart.AppVersion }}
        build-sha: {{ .Values.build.sha | default "unknown" }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "<service>.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.global.imageRegistry | default .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.targetPort }}
              protocol: TCP
            {{- if .Values.monitoring.enabled }}
            - name: metrics
              containerPort: 8080
              protocol: TCP
            {{- end }}
          {{- if .Values.healthChecks.enabled }}
          {{- with .Values.healthChecks.livenessProbe }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.healthChecks.readinessProbe }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.healthChecks.startupProbe }}
          startupProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or .Values.env .Values.configMap.enabled .Values.secret.enabled }}
          env:
            {{- with .Values.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.configMap.enabled }}
            - name: CONFIG_MAP_ENABLED
              value: "true"
            {{- end }}
            {{- if .Values.secret.enabled }}
            - name: SECRET_ENABLED
              value: "true"
            {{- end }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
          {{- end }}
          {{- if or .Values.configMap.enabled .Values.secret.enabled .Values.extraVolumeMounts }}
          volumeMounts:
            {{- if .Values.configMap.enabled }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
            {{- if .Values.secret.enabled }}
            - name: secrets
              mountPath: /app/secrets
              readOnly: true
            {{- end }}
            {{- if .Values.persistence.enabled }}
            - name: data
              mountPath: {{ .Values.persistence.mountPath }}
              {{- if .Values.persistence.subPath }}
              subPath: {{ .Values.persistence.subPath }}
              {{- end }}
            {{- end }}
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- end }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.podAntiAffinity "hard" }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "<service>.name" . }}
              topologyKey: kubernetes.io/hostname
      {{- else if eq .Values.podAntiAffinity "soft" }}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - {{ include "<service>.name" . }}
                topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      {{- if .Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ .Values.terminationGracePeriodSeconds }}
      {{- end }}
      {{- if or .Values.configMap.enabled .Values.secret.enabled .Values.persistence.enabled .Values.extraVolumes }}
      volumes:
        {{- if .Values.configMap.enabled }}
        - name: config
          configMap:
            name: {{ include "<service>.fullname" . }}
        {{- end }}
        {{- if .Values.secret.enabled }}
        - name: secrets
          secret:
            secretName: {{ include "<service>.fullname" . }}
        {{- end }}
        {{- if .Values.persistence.enabled }}
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "<service>.fullname" . }}
        {{- end }}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
{{- end }}