{{- if .Values.monitoring.enabled }}
---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: success-rate
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: success-rate
    interval: 30s
    count: 5
    successCondition: result[0] >= 0.95
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(irate(
            http_server_requests_total{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}",
              status!~"5.."
            }[2m]
          )) /
          sum(irate(
            http_server_requests_total{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}"
            }[2m]
          ))

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: latency-p99
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: latency-p99
    interval: 30s
    count: 5
    successCondition: result[0] <= 2.0
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          histogram_quantile(0.99,
            sum by (le) (irate(
              http_server_requests_seconds_bucket{
                job="{{`{{.args.service-name}}`}}",
                namespace="{{`{{.args.namespace}}`}}"
              }[2m]
            ))
          )

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: cpu-usage
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: cpu-usage
    interval: 30s
    count: 5
    successCondition: result[0] <= 0.8
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(rate(
            container_cpu_usage_seconds_total{
              pod=~"{{`{{.args.service-name}}`}}-.*",
              namespace="{{`{{.args.namespace}}`}}",
              container!="POD"
            }[2m]
          )) /
          sum(
            container_spec_cpu_quota{
              pod=~"{{`{{.args.service-name}}`}}-.*",
              namespace="{{`{{.args.namespace}}`}}",
              container!="POD"
            } / 100000
          )

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: memory-usage
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: memory-usage
    interval: 30s
    count: 5
    successCondition: result[0] <= 0.9
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(
            container_memory_working_set_bytes{
              pod=~"{{`{{.args.service-name}}`}}-.*",
              namespace="{{`{{.args.namespace}}`}}",
              container!="POD"
            }
          ) /
          sum(
            container_spec_memory_limit_bytes{
              pod=~"{{`{{.args.service-name}}`}}-.*",
              namespace="{{`{{.args.namespace}}`}}",
              container!="POD"
            }
          )

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: error-rate
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: error-rate
    interval: 30s
    count: 5
    successCondition: result[0] <= 0.05
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(irate(
            http_server_requests_total{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}",
              status=~"5.."
            }[2m]
          )) /
          sum(irate(
            http_server_requests_total{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}"
            }[2m]
          ))

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: throughput
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  - name: baseline-throughput
    value: "100"
  metrics:
  - name: throughput
    interval: 30s
    count: 5
    successCondition: result[0] >= {{ "{{.args.baseline-throughput}}" }}
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(irate(
            http_server_requests_total{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}"
            }[2m]
          ))

---
apiVersion: argoproj.io/v1alpha1
kind: AnalysisTemplate
metadata:
  name: database-connections
  labels:
    {{- include "<service>.labels" . | nindent 4 }}
spec:
  args:
  - name: service-name
  - name: namespace
    value: {{ .Release.Namespace }}
  metrics:
  - name: db-connections
    interval: 30s
    count: 5
    successCondition: result[0] <= 20
    failureLimit: 3
    provider:
      prometheus:
        address: http://prometheus.monitoring.svc.cluster.local:9090
        query: |
          sum(
            hikaricp_connections_active{
              job="{{`{{.args.service-name}}`}}",
              namespace="{{`{{.args.namespace}}`}}"
            }
          )
{{- end }}